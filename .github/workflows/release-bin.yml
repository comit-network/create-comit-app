name: Release
on:
  push:
    branches:
      - 'release/*'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  rust_build:
    strategy:
      matrix:
        os: [macos, windows, ubuntu]
        include:
          - os: windows
            binary: create-comit-app.exe
          - os: ubuntu
            binary: create-comit-app
          - os: macos
            binary: create-comit-app
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Extract toolchain version from rust-toolchain
        run: echo "::set-env name=RUST_TOOLCHAIN::$(cat rust-toolchain)"

      - name: Install ${{ env.RUST_TOOLCHAIN }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true

      - name: Install OpenSSL and configure it to link statically
        run: |
          vcpkg install openssl:x64-windows-static
          vcpkg integrate install
          echo "::set-env name=RUSTFLAGS::-Ctarget-feature=+crt-static"
        if: matrix.os == 'windows'

      - name: Build ${{ matrix.os }} release binary
        run: make release

  npm_build:
    name: NPM Project
    runs-on: ubuntu-latest
    needs: rust_build # Do not publish if the build failed
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
          always-auth: true
      - name: Build
        run: |
          cd .npm
          yarn install
          yarn list
      - name: Release on NPM
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          cd .npm
          yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
