name: Release
on:
  push:
    branches:
      - 'release/*'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  rust_build:
    strategy:
      matrix:
        os: [macos, windows, ubuntu]
        include:
          - os: windows
            binary: create-comit-app.exe
          - os: ubuntu
            binary: create-comit-app
          - os: macos
            binary: create-comit-app
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Extract toolchain version from rust-toolchain
        run: echo "::set-env name=RUST_TOOLCHAIN::$(cat rust-toolchain)"

      - name: Install ${{ env.RUST_TOOLCHAIN }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true

      - name: Add strawperryperl to the PATH to override the existing Perl installation so we can compile OpenSSL locally
        run: echo "##[add-path]C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin"
        if: matrix.os == 'windows'

      - name: Build ${{ matrix.os }} release binary
        run: make release

      - name: Use Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - name: Create archive
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          VERSION=$(git describe --tags)

          # We need to do bash -c to make sure this also works on GitBash for Windows.
          # GitHub actions uses GitBash for Windows if we say 'shell: bash' on a Windows executor.
          ARCHIVE=$(bash -c "node .npm/printArchiveName.js ${VERSION}")

          tar czvf ${ARCHIVE} -C target/release ${{ matrix.binary }}

      - name: Upload asset to GitHub release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: create-comit-app_*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  npm_build:
    name: NPM Project
    runs-on: ubuntu-latest
    needs: rust_build # Do not publish if the build failed
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
          always-auth: true
      - name: Build
        run: |
          cd .npm
          yarn install
          yarn list
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
