version: 2.1
workflows:
  version: 2
  main:
    jobs:
      - check_format
      - build_test

jobs:
  check_format:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      - RUST_TEST_THREADS: "8"
    steps:
      - checkout
      - restore_rustup_cache
      - install_rust
      - run:
          name:  "Install format crates Rust"
          command: |
            rustup component add rustfmt
            cargo install cargo-tomlfmt
      - run:
          name: "Run Git hooks"
          command: |
            source $HOME/.cargo/env
            sh ./.githooks/pre-commit
  build_test:
    working_directory: ~/workspace
    machine:
      image: ubuntu-1604:201903-01
    environment:
      - RUST_TEST_THREADS: "8"
    steps:
      - checkout
      - restore_caches
      - install_rust
      - run:
          name: "Build"
          command: |
            cargo build
      - run:
          name: "Install Clippy"
          command: rustup component add clippy
      - run:
          name: "Clippy"
          command: make clippy
      - run:
          name: "Test"
          command: |
            cargo test
      - save_caches

commands:
  install_rust:
    steps:
      - run:
          name: "Install Rust"
          command: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $(< rust-toolchain)
            source $HOME/.cargo/env
            echo 'export PATH=$HOME/.cargo/bin:$PATH' >> $BASH_ENV
            rustc --version --verbose
            cargo --version --verbose
  restore_rustup_cache:
    steps:
      - restore_cache:
          keys:
            - rustup-{{ checksum "rust-toolchain" }}
            # We don't want multiple toolchains to pile up in our cache, so only restore the ones we actually use.
  restore_caches:
    steps:
      - restore_rustup_cache
      - restore_cache:
          keys:
            - cargo-{{ .Branch }}
            - cargo
      - restore_cache:
          keys:
            - target-folder-{{ checksum "Cargo.lock" }}
            # We don't want the target folder to blow up over time, hence we only download the cache if it exactly matches `Cargo.lock`
  save_rustup_cache:
    steps:
      - save_cache:
          paths:
            - ~/.rustup
          key: rustup-{{ checksum "rust-toolchain" }}
  save_caches:
    steps:
      - save_rustup_cache
      - save_cache:
          paths:
            - ~/.cargo
          key: cargo-{{ .Branch }}
      - save_cache:
          key: target-folder-{{ checksum "Cargo.lock" }}
          paths:
            - "./target"
  